

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//НачалоДоработки. Барышникова Ю.А. Программное выведение на форму кнопки
    //Команда проверки вида договора. Если это обслуживание, то автозаполнение данными из договора обслуживания 
    // (абон.плата и выполненные за текущий месяц работы).

    Команда = Команды.Добавить("Заполнить");
    Команда.Заголовок = "Заполнить"; 
    Команда.Действие = "ВКМ_Заполнить";

    КнопкаФормы = Элементы.Добавить("КнопкаЗаполнить", Тип("КнопкаФормы"), КоманднаяПанель);
    КнопкаФормы.ИмяКоманды = "Заполнить";
    КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;

//КонецДоработки
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

//НачалоДоработки. Барышникова Ю.А, 25.11.2024. Автозаполнение данными из договора обслуживания

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ВКМ_Заполнить(Команда)
	ВКМ_ЗаполнитьНаСервере();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции


&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

//НачалоДоработки. Барышникова Ю.А. Автозаполнение данными из договора обслуживания

&НаСервере
Процедура ВКМ_ЗаполнитьНаСервере()  

	ДоговорСсылка = Объект.Договор;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДоговорСсылка, 
	"ВидДоговора, ВКМ_НачалоДействия, ВКМ_КонецДействия");

	ВидДоговора = ЗначенияРеквизитов.ВидДоговора;
	НачалоДоговора = ЗначенияРеквизитов.ВКМ_НачалоДействияДоговора;
	КонецДоговора = ЗначенияРеквизитов.ВКМ_КонецДействияДоговора;

	Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание Тогда

		//Если Объект.Дата > КонецДня(КонецДоговора) ИЛИ Объект.Дата < НачалоДня(НачалоДоговора) Тогда
		//	Сообщение = Новый СообщениеПользователю();
		//	Сообщение.Текст = "Договор не действителен на дату документа";
		//	Сообщение.Сообщить();
		//	Отказ = Истина; 
		//	
		//Иначе 
			ПроверкаКонстант = РеквизитФормыВЗначение("Объект");              
			ПроверкаКонстант.ВыполнитьАвтозаполнение();                             
			ЗначениеВРеквизитФормы(ПроверкаКонстант, "Объект")                     

		//КонецЕсли; 

	КонецЕсли;

КонецПроцедуры

//КонецДоработки

#КонецОбласти





